services:
  # Base de données MySQL
  db:
    image: mysql:8.0
    container_name: mysql_payload
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: payload_analyser
      TZ: Europe/Paris
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 60s

  # TGI Mistral - Version CPU optimisée
  tgi:
    image: ghcr.io/huggingface/text-generation-inference:1.4
    container_name: mistral_tgi
    restart: always
    ports:
      - "8080:80"
    environment:
      - MODEL_ID=/models/mistral-7b
      - MAX_INPUT_LENGTH=1024
      - MAX_TOTAL_TOKENS=2048
      - MAX_BATCH_PREFILL_TOKENS=1024
      - MAX_BATCH_TOTAL_TOKENS=2048
      - MAX_WAITING_TOKENS=10
      - MAX_MODEL_LEN=2048
      - MAX_CONCURRENT_REQUESTS=1
      - HUGGING_FACE_HUB_TOKEN=${HUGGING_FACE_HUB_TOKEN:-}
    volumes:
      - ./models:/models
      - ./cache:/root/.cache/huggingface
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost/health"]
      interval: 60s
      timeout: 30s
      retries: 3
      start_period: 300s

  # ChromaDB - Base de données vectorielle
  chromadb:
    image: chromadb/chroma:latest
    container_name: chromadb
    restart: always
    ports:
      - "8000:8000"
    environment:
      - CHROMA_SERVER_HOST=0.0.0.0
      - CHROMA_SERVER_HTTP_PORT=8000
      - CHROMA_SERVER_CORS_ALLOW_ORIGINS=["*"]
    volumes:
      - chromadb_data:/chroma/chroma
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/api/v1/heartbeat"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 30s

  # Retriever + FastAPI
  retriever:
    build:
      context: ./retriever
      dockerfile: Dockerfile
    container_name: mistral_retriever
    depends_on:
      db:
        condition: service_healthy
      chromadb:
        condition: service_healthy
      tgi:
        condition: service_healthy
    ports:
      - '5001:5000'
    environment:
      - DB_HOST=db
      - DB_USER=root
      - DB_PASSWORD=root
      - DB_NAME=payload_analyser
      - TGI_URL=http://tgi:80
      - CHROMA_URL=http://chromadb:8000
      - MISTRAL_URL=http://tgi:80
      - MISTRAL_LEARNER_URL=http://tgi:80
    volumes:
      - retriever-data:/data
    restart: always

  # Application Web Flask
  web:
    build:
      context: ..
      dockerfile: Dockerfile
    container_name: qradar_ticket
    restart: always
    depends_on:
      db:
        condition: service_healthy
      retriever:
        condition: service_started
    environment:
      - DB_HOST=db
      - DB_USER=root
      - DB_PASSWORD=root
      - DB_NAME=payload_analyser
    ports:
      - "5000:5000"
    volumes:
      - profile_photos:/app/profile_photos

volumes:
  mysql_data:
  profile_photos:
  retriever-data:
  chromadb_data: 